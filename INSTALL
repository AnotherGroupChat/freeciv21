=====================
Installing Freeciv21:
=====================

This file describes how to compile and install Freeciv21. Last time we made sure this file is up to date was 14-Feb-21. Last major
update was 14-Feb-21.

This document contains sections and subsections as follows:
     0. Prerequisites:
     1. Prerequisites for the Qt client:
     2. Compiling and Installing Freeciv21:
     3. Debian Notes:
     4. Windows Notes:


0. Prerequisites:
=================

Freeciv21 has a number of prerequisites.  Note, that apart from the first prerequisite, the Freeciv21 configuration process is smart
enough to work out whether your system is suitable.  If in doubt, just try it.

 - Unix (or similar)

The Unix operating system, a work-alike such as Linux or FreeBSD, or some OS that provides a very Unix-like personality or mode,
like EMX under OS/2 or the Cygnus Cygwin toolkit under Windows.  (See https://www.cygwin.com/).  Support for BSD-style TCP/IP
sockets is essential, as is a Bourne-shell compatible shell, such as GNU "bash".  (Most Unixes fit the bill...)

 - An ANSI C and C++ compiler.

Freeciv21 is written in very portable (almost) ANSI C and C++.  Both 32- and 64-bit machines are supported.  You cannot use a "K&R
C" compiler, or a C++ compiler.

Development of Freeciv21 is primarily done with "gcc", the GNU project's excellent C compiler, or on Windows MS Visual C.

 - A "cmake" program.

   Freeciv21 developers generally use "cmake", the Kitware make program.

   Officially released versions of Freeciv21 are designed to have makefiles which work with most cmake programs.

   You can check if you have GNU make installed on your system by typing:

       % cmake --version

   The output should include "Kitware cmake" somewhere.

 - Ninja cmake build program

 - libtool version 2.2 or better

 - libcurl version 7.15.4 or better

   Libcurl takes care of http communication with the metaserver, and file transfers of modpack installers.  http://curl.haxx.se/

 - libicu

   Libicu helps handling UTF-8 texts. 

   http://site.icu-project.org/

 - libsqlite3

   http://www.sqlite.org/

   The git version has additional requirements. A release version contains the generated files.

 - The programs from GNU gettext version 0.15 or better

   Especially the xgettext program is required to create the *.gmo files which aren't included in the git tree.

 - libkf5aarchive

 - libSDL2 Mixer

 - python3


1. Prerequisites for the Qt client:
===================================

The Freeciv21 project maintains a single Qt client.

 - C++ compiler.

Qt-client is written in C++, so you need appropriate compiler. In Freeciv21 development, g++ has been used.

 - Qt5Core, Qt5Gui, and Qt5Widgets libraries and headers. At least version 5.11 is required.


2. Compiling and Installing Freeciv21:
======================================

Compiling Freeciv21 requires the use of the cmake program. cmake does require the use of command line parameters to function
appropriately.  This section will outline the major use case scenarios.

First, let's start with describing a few command line parameters. cmake calls the directives and they start with -D.

  -DFREECIV_ENABLE_TOOLS={YES/NO}     -- Enables tools such as the Modpack Installer
  -DFREECIV_ENABLE_SERVER={YES/NO}    -- Enables the server. Should typically set to YES to be able to play AI games
  -DFREECIV_ENABLE_NLS={YES/NO}       -- Enabled Native Language Support
  -DCMAKE_BUILD_TYPE={Release/Debug}  -- Changes the Build Type. Most people will pick Release
  -DCMAKE_INSTALL_PREFIX=/some/path   -- Allows an alternative install path. Default is /usr/freeciv
  -DCMAKE_CXX_FLAGS="-O9"             -- Typical CXX Flags to optimize binaries

Once the command line directives are determined, the appropriate command looks like this:

   cmake . -B build -G Ninja \
     -DFREECIV_ENABLE_TOOLS=NO \
     -DFREECIV_ENABLE_SERVER=YES \
     -DCMAKE_BUILD_TYPE=Release \
     -DFREECIV_ENABLE_NLS=NO \
     -DCMAKE_CXX_FLAGS="-O9" \
     -DCMAKE_INSTALL_PREFIX=$HOME/Install/Freeciv21

Once the build files have been written, then compile with this command:

   cmake --build build

Once the compilation is complete, install the game with this command:

   cmake --install build

After compilation, the important results are:

  - The "build/freeciv-qt" and "build/freeciv-server" binaries.
  - The "build/data/" directory, which contains the graphics and scenarios.

It's perfectly feasible to play Freeciv21 in this directory, without installing it.

See the README file for more information.

(However you cannot use Internationalization when playing Freeciv21 from the source directory; you must install Freeciv21 for that.)


3. Debian Linux Notes:
======================

Below are all the command line steps needed to start with a fresh install of Debian or its variants (e.g. Ubuntu, Linux Mint) to
install Freeciv21.

   sudo apt install build-dep-freeciv \
     git \
     cmake \
     ninja-build \
     python3 \
     gettext \
     qt5-default \
     libkf5archive-dev \
     libsqlite3-dev \
     libsdl2-mixer-dev \
     libsdl2-dev \
     libmagicwand-dev

   mkdir -p $HOME/GitHub

   cd $HOME/GitHub

   git clone https://github.com/longturn/freeciv21.git

   cd freeciv21

At this point follow the steps in section 2 above.


4. Windows notes:
=================

Windows version of Freeciv21 can be built either with Msys2 or MSVC.

Build instructions for Msys2 versions are documented on doc/README.msys2. Alternately you can visit
https://github.com/jwrober/freeciv-msys2 for ready make scripts.

For MS Visual C, open Visual Studio and open the Freeciv21 folder and compile from there.


** END **
